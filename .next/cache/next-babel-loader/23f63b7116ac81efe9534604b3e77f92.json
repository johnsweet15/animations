{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button, Checkbox, PageHeader, Row, Col, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport loginService from \"../../services/login\";\nimport \"./index.scss\";\nexport default function Login() {\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var username, password, loginRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = values.username, password = values.password;\n              _context.next = 3;\n              return loginService.login({\n                username: username,\n                password: password\n              });\n\n            case 3:\n              loginRes = _context.sent;\n              console.log(loginRes);\n\n              if (loginRes.ok) {\n                message.success(\"Logged in\");\n              } else {\n                message.error(loginRes);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Col, {\n    xs: 22,\n    sm: 18,\n    md: 12,\n    lg: 8,\n    style: {\n      margin: \"auto\"\n    }\n  }, __jsx(PageHeader, {\n    className: \"site-page-header\",\n    title: \"Login\",\n    subTitle: \"Enter auth info\"\n  }), __jsx(Form, {\n    name: \"normal_login\",\n    className: \"\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: \"Please input your Username!\"\n    }]\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    placeholder: \"Username\"\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input your Password!\"\n    }]\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    type: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(Form.Item, null, __jsx(Form.Item, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    noStyle: true\n  }, __jsx(Checkbox, null, \"Remember me\")), __jsx(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\"\n  }, \"Forgot password\")), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\"\n  }, \"Log in\"), \"Or \", __jsx(\"a\", {\n    href: \"\"\n  }, \"register now!\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}