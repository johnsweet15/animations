{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { message } from \"antd\";\n\nclass Service {\n  constructor() {\n    _defineProperty(this, \"handleError\", response => {\n      console.log(\"here\"); // switch (error?.response?.status) {\n      //   case 403:\n      //     message.error(\"Invalid session. Please try signing in again.\");\n      //     break;\n      //   case 404:\n      //     message.error(\"Not found\");\n      //     break;\n      //   default:\n      //     message.error(\"Internal server error.\");\n      //     break;\n      // }\n\n      return response;\n    });\n\n    let service = axios.create({});\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  get(path, params) {\n    return this.service.get(path, {\n      params: params\n    });\n  }\n\n  post(path, payload) {\n    return this.service.post(path, payload);\n  }\n\n}\n\nlet service = new Service();\nexport default service;","map":{"version":3,"sources":["/Users/johnsweet/repos/starter-frontend/src/services/service.js"],"names":["axios","message","Service","constructor","response","console","log","service","create","interceptors","use","handleSuccess","handleError","get","path","params","post","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,GAAG;AAAA,yCAWCC,QAAD,IAAc;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAOF,QAAP;AACD,KAzBa;;AACZ,QAAIG,OAAO,GAAGP,KAAK,CAACQ,MAAN,CAAa,EAAb,CAAd;AAEAD,IAAAA,OAAO,CAACE,YAAR,CAAqBL,QAArB,CAA8BM,GAA9B,CAAkC,KAAKC,aAAvC,EAAsD,KAAKC,WAA3D;AACA,SAAKL,OAAL,GAAeA,OAAf;AACD;;AAEDI,EAAAA,aAAa,CAACP,QAAD,EAAW;AACtB,WAAOA,QAAP;AACD;;AAkBDS,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAe;AAChB,WAAO,KAAKR,OAAL,CAAaM,GAAb,CAAiBC,IAAjB,EAAuB;AAAEC,MAAAA,MAAM,EAAEA;AAAV,KAAvB,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAACF,IAAD,EAAOG,OAAP,EAAgB;AAClB,WAAO,KAAKV,OAAL,CAAaS,IAAb,CAAkBF,IAAlB,EAAwBG,OAAxB,CAAP;AACD;;AAlCW;;AAqCd,IAAIV,OAAO,GAAG,IAAIL,OAAJ,EAAd;AACA,eAAeK,OAAf","sourcesContent":["import axios from \"axios\";\nimport { message } from \"antd\";\n\nclass Service {\n  constructor() {\n    let service = axios.create({});\n\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError = (response) => {\n    console.log(\"here\");\n    // switch (error?.response?.status) {\n    //   case 403:\n    //     message.error(\"Invalid session. Please try signing in again.\");\n    //     break;\n    //   case 404:\n    //     message.error(\"Not found\");\n    //     break;\n    //   default:\n    //     message.error(\"Internal server error.\");\n    //     break;\n    // }\n    return response;\n  };\n\n  get(path, params) {\n    return this.service.get(path, { params: params });\n  }\n\n  post(path, payload) {\n    return this.service.post(path, payload);\n  }\n}\n\nlet service = new Service();\nexport default service;\n"]},"metadata":{},"sourceType":"module"}