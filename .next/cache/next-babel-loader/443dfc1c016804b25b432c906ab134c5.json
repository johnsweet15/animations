{"ast":null,"code":"import axios from \"axios\";\nimport { message } from \"antd\";\nconst serviceUtil = {\n  post: function post(url, payload, headers, callback) {\n    const service = axios.create({});\n    return new Promise(async (res, rej) => {\n      try {\n        await service.post(url, payload, headers);\n        res(callback);\n      } catch (error) {\n        rej(error);\n      }\n    });\n  },\n  get: function get(url, headers, callback) {\n    const service = axios.create({});\n    return new Promise(async (res, rej) => {\n      try {\n        await service.get(url, headers);\n        res(callback);\n      } catch (error) {\n        rej(error);\n      }\n    });\n  }\n};\nexport default serviceUtil;","map":{"version":3,"sources":["/Users/johnsweet/repos/starter-frontend/src/services/service.js"],"names":["axios","message","serviceUtil","post","url","payload","headers","callback","service","create","Promise","res","rej","error","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,QAArC,EAA+C;AACnD,UAAMC,OAAO,GAAGR,KAAK,CAACS,MAAN,CAAa,EAAb,CAAhB;AACA,WAAO,IAAIC,OAAJ,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,UAAI;AACF,cAAMJ,OAAO,CAACL,IAAR,CAAaC,GAAb,EAAkBC,OAAlB,EAA2BC,OAA3B,CAAN;AACAK,QAAAA,GAAG,CAACJ,QAAD,CAAH;AACD,OAHD,CAGE,OAAOM,KAAP,EAAc;AACdD,QAAAA,GAAG,CAACC,KAAD,CAAH;AACD;AACF,KAPM,CAAP;AAQD,GAXiB;AAYlBC,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaV,GAAb,EAAkBE,OAAlB,EAA2BC,QAA3B,EAAqC;AACxC,UAAMC,OAAO,GAAGR,KAAK,CAACS,MAAN,CAAa,EAAb,CAAhB;AACA,WAAO,IAAIC,OAAJ,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,UAAI;AACF,cAAMJ,OAAO,CAACM,GAAR,CAAYV,GAAZ,EAAiBE,OAAjB,CAAN;AACAK,QAAAA,GAAG,CAACJ,QAAD,CAAH;AACD,OAHD,CAGE,OAAOM,KAAP,EAAc;AACdD,QAAAA,GAAG,CAACC,KAAD,CAAH;AACD;AACF,KAPM,CAAP;AAQD;AAtBiB,CAApB;AAyBA,eAAeX,WAAf","sourcesContent":["import axios from \"axios\";\nimport { message } from \"antd\";\n\nconst serviceUtil = {\n  post: function post(url, payload, headers, callback) {\n    const service = axios.create({});\n    return new Promise(async (res, rej) => {\n      try {\n        await service.post(url, payload, headers);\n        res(callback);\n      } catch (error) {\n        rej(error);\n      }\n    });\n  },\n  get: function get(url, headers, callback) {\n    const service = axios.create({});\n    return new Promise(async (res, rej) => {\n      try {\n        await service.get(url, headers);\n        res(callback);\n      } catch (error) {\n        rej(error);\n      }\n    });\n  },\n};\n\nexport default serviceUtil;\n"]},"metadata":{},"sourceType":"module"}