{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { message } from \"antd\";\n\nclass Service {\n  constructor() {\n    _defineProperty(this, \"handleError\", error => {\n      var _error$response;\n\n      switch (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) {\n        case 403:\n          message.error(\"Invalid session. Please try signing in again.\");\n          break;\n\n        case 404:\n          message.error(\"Not found\");\n          break;\n\n        default:\n          message.error(\"Internal server error.\");\n          break;\n      }\n\n      return Promise.reject(error);\n    });\n\n    let service = axios.create({});\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  get(path, params) {\n    return this.service.get(path, {\n      params: params\n    });\n  }\n\n  post(path, payload) {\n    return this.service.post(path, payload);\n  }\n\n}\n\nlet service = new Service();\nexport default service;","map":null,"metadata":{},"sourceType":"module"}