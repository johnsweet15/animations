{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\n\nclass Service {\n  constructor() {\n    _defineProperty(this, \"handleError\", error => {\n      var _error$response, _error$response2;\n\n      console.log(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n\n      switch (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) {\n        case 401:\n          break;\n\n        case 403:\n          alert(\"Invalid session. Please try signing in again.\");\n          window.location.reload();\n          break;\n\n        case 404:\n          alert(\"Not found\");\n          break;\n\n        default:\n          alert(\"Internal server error.\");\n          break;\n      }\n\n      return error;\n    });\n\n    let service = axios.create({});\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  get(path, params) {\n    return this.service.get(path, {\n      params: params\n    });\n  }\n\n  post(path, payload) {\n    return this.service.post(path, payload);\n  }\n\n}\n\nlet service = new Service();\nexport default service;","map":{"version":3,"sources":["/Users/johnsweet/repos/starter-frontend/src/services/service.js"],"names":["axios","message","Service","constructor","error","console","log","response","status","alert","window","location","reload","service","create","interceptors","use","handleSuccess","handleError","get","path","params","post","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,GAAG;AAAA,yCAWCC,KAAD,IAAW;AAAA;;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,aAAYA,KAAZ,0CAAYA,KAAK,CAAEG,QAAnB,oDAAY,gBAAiBC,MAA7B;;AACA,cAAQJ,KAAR,aAAQA,KAAR,2CAAQA,KAAK,CAAEG,QAAf,qDAAQ,iBAAiBC,MAAzB;AACE,aAAK,GAAL;AACE;;AACF,aAAK,GAAL;AACEC,UAAAA,KAAK,CAAC,+CAAD,CAAL;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA;;AACF,aAAK,GAAL;AACEH,UAAAA,KAAK,CAAC,WAAD,CAAL;AACA;;AACF;AACEA,UAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AAZJ;;AAcA,aAAOL,KAAP;AACD,KA5Ba;;AACZ,QAAIS,OAAO,GAAGb,KAAK,CAACc,MAAN,CAAa,EAAb,CAAd;AAEAD,IAAAA,OAAO,CAACE,YAAR,CAAqBR,QAArB,CAA8BS,GAA9B,CAAkC,KAAKC,aAAvC,EAAsD,KAAKC,WAA3D;AACA,SAAKL,OAAL,GAAeA,OAAf;AACD;;AAEDI,EAAAA,aAAa,CAACV,QAAD,EAAW;AACtB,WAAOA,QAAP;AACD;;AAqBDY,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAe;AAChB,WAAO,KAAKR,OAAL,CAAaM,GAAb,CAAiBC,IAAjB,EAAuB;AAAEC,MAAAA,MAAM,EAAEA;AAAV,KAAvB,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAACF,IAAD,EAAOG,OAAP,EAAgB;AAClB,WAAO,KAAKV,OAAL,CAAaS,IAAb,CAAkBF,IAAlB,EAAwBG,OAAxB,CAAP;AACD;;AArCW;;AAwCd,IAAIV,OAAO,GAAG,IAAIX,OAAJ,EAAd;AACA,eAAeW,OAAf","sourcesContent":["import axios from \"axios\";\nimport { message } from \"antd\";\n\nclass Service {\n  constructor() {\n    let service = axios.create({});\n\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError = (error) => {\n    console.log(error?.response?.status);\n    switch (error?.response?.status) {\n      case 401:\n        break;\n      case 403:\n        alert(\"Invalid session. Please try signing in again.\");\n        window.location.reload();\n        break;\n      case 404:\n        alert(\"Not found\");\n        break;\n      default:\n        alert(\"Internal server error.\");\n        break;\n    }\n    return error;\n  };\n\n  get(path, params) {\n    return this.service.get(path, { params: params });\n  }\n\n  post(path, payload) {\n    return this.service.post(path, payload);\n  }\n}\n\nlet service = new Service();\nexport default service;\n"]},"metadata":{},"sourceType":"module"}